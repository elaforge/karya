The Render layer takes the Score data and turns it into sound.  It has several
backends, such as MIDI, OSC, csound, etc.

    MidiRender

Convert Score to midi.
- Sends timestamped midi msgs to a midi player thread that tries to get the
timing as close as possible.
- Renders controller curves into a stream of midi msgs, depending on the
controller resolution settings.
- Maps pitches to midi note number + pitch bend.
- Distributes notes to midi channels: if an instrument is given >1 channel, it
will try to keep notes with overlapping note numbers or controller curves on
separate channels, so you can e.g. pitch bend one note without affecting
others, or play two notes on the same nn.
- Keeps track of outgoing midi bandwidth for display to the user.
- Saves and sends sysex dumps to configure synths.
- Can also insert MIDI timing to sync other devices (can I sync cubase this
way?)


    MidiRecord

Receive timestamped midi msgs and convert them to Score, which can then be
converted to Block format and inserted into a block.

    MidiThread

Receive a stream of timestamped midi msgs and play them accurately.  Also
receive midi msgs, timestamp them, and relay to the midi input chan.

Normally the Msg thread is listening to the input chan so it can trigger
Actions.  However, when recording or monitoring, MidiRecord gets them.
For monitoring, MidiRecord also sends incoming msgs back out again, possibly
after remapping to a different channel and port.
