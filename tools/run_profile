#!/bin/zsh
# Copyright 2013 Evan Laforge
# This program is distributed under the terms of the GNU General Public
# License 3.0, see COPYING or http://www.gnu.org/licenses/gpl-3.0.txt

# Run matching profiles with biographical profiling:
# heap=hb tools/run_profile profile1 profile2
#
# Run RunProfile-Rederive with default profiling:
# tools/run_profile -Rederive profile1 profile2
#
# Flags for 'heap' env var:
# hc - by producing cost-center stack
# hm - by module
# hd - by closure description
# hy - by type
# hr - by retainer set
# hb - by biography

prefixes=("$@")

# Take flags from $heap and split on spaces.
# This way you can pass 'hc hbdrag', (-hc -hbdrag) will be passed, and the
# output will be named hc_hbdrag.*
heap_flags=(${=${heap:-hc}})

if [[ $prefixes[1] = seq ]]; then
    run_profile=(build/profile/seq $prefixes[2,-1])
    profiles=seq
elif [[ $prefixes[1] = -* ]]; then
    run_profile=(build/profile/RunProfile$prefixes[1])
    profiles=($($run_profile --list .))
else
    run_profile=(build/profile/RunProfile)
    profiles=($($run_profile --list $prefixes))
fi

basename=$(basename $run_profile[1])
out=prof

flags=(
    # time profiling
    -s$basename.gc # emit runtime summary
    -p # emit .prof file

    # heap profiling
    -L42 # field length for cost center names in heap profile
)

function run() {
    echo "$@"
    "$@"
}

for prof in $profiles; do
    dir=$out/$(date +%y-%m-%d)/${prof/*-/}
    mkdir -p $dir
    stem=$dir/$heap_flags
    # Due to shells being insane, this substitution can't happen to heap_flags
    # directly.
    stem=${stem/ /_}
    if [[ $prof = seq ]]; then
        cores=1 run $run_profile +RTS $flags -${^heap_flags} -RTS
    else
        run $run_profile +RTS $flags -${^heap_flags} -RTS "^$prof$" \
            | tee $basename.stdout
    fi

    for suf in gc hp aux tix stdout prof; do
        if [[ -e $basename.$suf ]]; then
            mv $basename.$suf $stem.$suf
        fi
    done
    if [[ -e $stem.hp ]]; then
        if whence ps2pdf; then
            echo $stem.pdf
            hp2ps -b -c <$stem.hp | ps2pdf - - >$stem.pdf
        else
            echo $stem.ps
            hp2ps -b -c <$stem.hp >$stem.ps
        fi
    fi
done

# Report the directory so the calling script can do something with it.
echo "### $stem" 1>&2
