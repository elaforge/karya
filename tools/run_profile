#!/bin/zsh
# Flags for 'head' env var:
# hc - by producing cost-center stack
# hm - by module
# hd - by closure description
# hy - by type
# hr - by retainer set
# hb - by biography

prefixes=("$@")

# Take flags from $heap and split on spaces.
# This way you can pass 'hc hbdrag', (-hc -hbdrag) will be passed, and the
# output will be named hc_hbdrag.*
heap_flags=(${=${heap:-hm}})

if [[ $prefixes[1] = seq ]]; then
    run_profile=(build/profile/seq $prefixes[2,-1])
    basename=seq
    profiles=seq
else
    run_profile=build/profile/RunProfile
    basename=RunProfile
    profiles=($($run_profile --list $prefixes))
fi

out=prof

flags=(
    # time profiling
    -s$basename.gc # emit runtime summary
    -p # emit .prof file

    # heap profiling
    -L42 # field length for cost center names in heap profile
)

function run() {
    echo "$@"
    "$@"
}

for prof in $profiles; do
    dir=$out/$(date +%y-%m-%d)/${prof/*-/}
    mkdir -p $dir
    stem=$dir/$heap_flags
    # Due to shells being insane, this substitution can't happen to heap_flags
    # directly.
    stem=${stem/ /_}
    if [[ $prof = seq ]]; then
        cores=1 run $run_profile +RTS $flags -${^heap_flags} -RTS
    else
        run $run_profile +RTS $flags -${^heap_flags} -RTS "^$prof$" \
            | tee $basename.stdout
    fi

    for suf in gc hp aux tix stdout; do
        if [[ -e $basename.$suf ]]; then
            mv $basename.$suf $stem.$suf
        fi
    done
    runghc tools/Columnize.hs <$basename.prof >$stem.prof
    rm $basename.prof
    if [[ -e $stem.hp ]]; then
        echo $stem.pdf
        hp2ps -b -c <$stem.hp | ps2pdf - - >$stem.pdf
    fi
done

# Report the directory so the calling script can do something with it.
echo "### $stem" 1>&2
