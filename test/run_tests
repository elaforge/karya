#!/bin/zsh

# Run tests given in prefixes.  If some of them require init, run each in a
# separate process.
# Redirect stderr to test.output.
# Grep for failures.

# TODO: display warn and error log msgs

run_tests=$1
shift
if [[ -z $run_tests ]]; then
    echo "usage: $0 run/tests/binary [ prefixes ...]"
    exit 1
fi

# This is appended to.  It should be reset along with the coverage data every
# time test_obj/RunTests is built.
test_output=build/test.output

prefixes=("$@")
if [[ -z $prefixes ]]; then
    prefixes=('normal-')
fi

function run() {
    "$@"
    local r=$?
    if [[ $r -ne 0 ]]; then
        echo '__->' cmd returned $r: "$@"
    fi
}

# Debug.Trace.trace prints to stderr, apparently there's no way to change
# that.
run $run_tests --noninteractive $prefixes >$test_output 2>&1

echo -n '\nTests complete.  Failures:\n'
test/extract_failures.py <$test_output
passes=$(grep '^++->' $test_output | wc -l)
failures=$(grep '^__->' $test_output | wc -l)
tests=$(grep '^-----' $test_output | wc -l)
echo $failures failed / $passes passed / $tests tests

echo 'Generating hpc markup (in the background)...'
(
    mkdir -p build/hpc
    hpc markup --destdir=build/hpc RunTests | grep -v Writing
    # I'm more used to typing index.html
    (cd build/hpc && ln -fs hpc_index.html index.html)
) &

exit $failures
