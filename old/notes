	ui layer
c++ UI code in fltk
creates and destroys ui elements: blocks, tracks, events
receives kbd and mouse events and forwards them to the control layer
receives UI display commands from the control layer

	control layer
haskell code for the main logic
receives actions and applies them to block, track, and event models, and
forwards the changes to the ui layer
actions are received from the ui layer (kbd and mouse), the midi port, and the
repl
plays block data, depending on the defined set of transformers and
interpreters


	receive threads
threads listen on Ui.wait_for_event, /dev/midi, and the REPL window, and drop
them on a queue.

	mutator thread
The mutator thread pulls events off the queue.  UI and midi events are mapped
through the dispatch table, which turns them into actions.  REPL events (plain
strings) are compiled and are expected to be IO Action.  The mutator enters
them in the undo queue and applies them.


Actions - the set of primitive commands.  They are invertable for undo.
Group [Action] -- group Actions so they may be manipulated (undo) as a unit
RemoveEvent Track Event -- remove Event from Track
AddEvent Track Event Trackpos -- add event to Track at Trackpos

AddTrack Block Track -- add Track to Block
RemoveTrack Block Track -- remove Track from Block
