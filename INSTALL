## INSTALLATION

- Install dependencies, documented below.

- On OS X, run 'defaults write -g ApplePressAndHoldEnabled -bool false' to
re-enable key repeats globally.  Provided you want them to work sanely, and
note iphone-ly.

- Build shakefile: bin/mkmk

- Build optimized binaries and documentation: 'repl=t bin/mk binaries doc' The
repl=t part enables the REPL, which you want, but will make linking take a lot
longer, which is why it's off by default.  It will try to link to CoreMIDI on
the mac and to JACK on linux.  If for some reason you don't have one of those,
you can pass midi=stub to link the stub MIDI driver, but don't expect any
interesting music to come out.

## HASKELL DEPENDENCIES

To install the needed haskell dependencies, type:

> cabal install --only-dependencies
> cabal install hscolour

The actual build is with shake, but there's a dummy cabal file with just
dependencies to make install easier.

pandoc builds the documentation, but isn't in the cabal file because it ha a
zillion dependencies and I just need the binary.  Or just read the markdown
directly, that's what it's for.  So many dependencies just to convert text to
HTML.

One weakness of the shake build system as opposed to cabal is that it doesn't
have the full constraint solver to figure out which versions of the various
dependent packages to use.  The result is that it just uses the latest version
of everything, which will be a problem if another package was compiled against
an older version.  It might be possible to use just the constraint solver from
the Cabal library, but it would probably need some refactoring to be usable.
Meanwhile, I haven't had any real trouble with dependency hell, despite not
using cabal-dev or anything like that.

## INSTALLED SEPARATELY

libpcre library from http://www.pcre.org
OS X ports puts headers in /opt where configure may not find them.

libgit2 - It has no official releases, but I synced to:
https://github.com/libgit2/libgit2 be5869fce0ab9c61a294020e9baa9755c58ee8a3

Make sure you sync to excatly that commit, because they break the API
frequently.

lilypond, for some fonts, and for the lilypond backend, of course.

    OS X:
    cp LilyPond.app/Contents/Resources/share/lilypond/current/fonts/otf/emmentaler* ~/Library/Fonts

    Linux:
    cp /usr/share/lilypond/<version>/fonts/otf/ ~/.fonts
    # or
    cp /usr/share/lilypond/<version>/fonts/otf/ /usr/share/fonts/

    Use fc-list to see installed fonts and their names.  For some reason, the
    fonts on linux sometimes have backslashes in their names, and sometimes
    not.  If there is a complaint at startup about the font not being found you
    might have to edit App/Config.hsc.  Or not, I hardly use the music symbols.

fltk-1.3, from http://fltk.org/

## LINUX

Either jack1 or jack2.  JACK support is mostly untested and probably doesn't
work, since I don't do music on linux.  Get in touch if you really care about
linux support.

## MISC

tools/run_profile expects ps2pdf in the path, which is part of ghostscript.
