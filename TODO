ui
  - figure out redraw situation.  when do I have to call it?
  * make TrackPos into an opaque type to let me be more free with impl.
    implement as int64 usec?  or since it's just block relative, I can use
    plain unsigned msec?
  * scroll
  * add info line at the bottom
  - show_names, use_alpha etc. should go in OverlayRuler
  - zoom
  - selections
  - bug: one pixel drawing glitch at bottom of tracks
  * bug: resizing ruler to 0 crashes
  EventCollector:
    - convert EventCollectWindow to global EventCollector
    - everyone should send their events there
  MoveTile
    * bug: I can resize a divider by dragging the right edge
    * bug: dragging divider jumps to dragging by left edge
    * dragging tracks should resize rightmost / bottommost widget like resize()
    * bug: moving a track off the right side chops it off
    - bug: tracks close together seem to have a problem, and the arrow hot point
      isn't obvious.  highlight?  or a handle somehow?
  event track
    * overlay ruler
    + events
  Ruler
    * clip markers when they overlap edge of widget
    - text labels

  find out how to draw
    * transparent selections
    - background graphs / antialiased lines


interface
  * use main thread for ui
  - get/set block config, block view config
  - BlockView.set_track_width
  - track_at
  - Event

app
  - actions
  - msg -> action mapping

Midi
  - midi thru: MVar (Port -> Message -> [(Port, Message)])
  - scheduler for out of order writes + thru?  how about I always write in
    order and don't allow timestamps on thru?
  bandwidth
    - keep stats
    - display widget
  - midi tools: Hz -> midi mapper, channer allocator

Osc
  - does reaktor support timestamps?

research
  - loading fonts in fltk, and drawing new fonts
  - subscribe to haskell-art
  - download sequencers and see how they ship midi reliably
  - draw antialiased lines and curves on os x
  - investigate hs-plugins and xmonad to see about hs plugin possibilities
    xmonad just recompiles the whole app
    I could actually do that at first too
  - learn about hs gtk for reference

future
  - check out jack some more.  I don't necessarily support it in the beginning
    but should have an idea at least.
    Looks like I could use it for midi i/o, but what's the advantage over
    e.g. portmidi?  Maybe the ability to send midi to e.g. local apps in
    standalone mode?  Or would be be better to support vst?
  - sync via jack with e.g. ardour, rosegarden
  - vst interface
  - liblash would let me save plugin / jack configuration
