Instead of just plain text, it's nice to be able to include custom symbols in
notation.  I should be able to draw these with a font-editing program, load
them as fonts, and intersperse them with normal characters.

They are typed as: ?symbol name?.  If I allow editing from the UI then things
get tricky, because I have to decompose symbols into their representation when
it's time to edit them.  It's probably possible but would make editing a lot
more complicated.  So for the moment they are only supported from code, and
note text editing simply doesn't accept ?s.  Symbols could be named "font/sym"
since they are a global namespace.

I could use any old symbol, but ?s seem good because / is already not allowed
since I want to save it for namespace separation.


To display the symbol, I need to load the custom fonts into unicode ranges,
and then I need a mapping from symbol name to codepoint.  The mapping for each
font starts from 0 but has to be patched with the correct numbers depending
where its loaded.  I assume there's an "undefined" zone in unicode I could
use.

Now, when event text is drawn, the symbol names are looked up in the table
and replaced with the UTF8 encoded codepoint if found.  This happens in c++
since c++ also has to load the font maps.

Questions:

- Is there a good free font editor?
- Is there an undefined unicode range?
- fl_draw supports UTF8 now, right?
- How do you load new fonts in fltk?
- Where are the default fonts defined, if I want to have characters that are
modifications of them, e.g. 5. or 5^?
